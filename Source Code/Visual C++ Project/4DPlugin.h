/* --------------------------------------------------------------------------------
 #
 #	4DPlugin.h
 #	source generated by 4D Plugin Wizard
 #	Project : Win32API
 #	author :  dcompton & dschilling
 #	6/21/2001
 #
 #
 # --------------------------------------------------------------------------------*/

#ifndef _WIN32_IE
#define _WIN32_IE 0x0500
#endif

#ifndef __4DPLUGIN_H__
#define __4DPLUGIN_H__

#include "4D Plugin API\4DPluginAPI.h"
#include <Windows.h>
#include <TlHelp32.h> // for snapshot of process in win95/98 etc
#include <stdio.h> // for snapshot
#include "Defines.h"
#include <VersionHelpers.h>
#include <stdint.h>
#include <wincrypt.h> // WJF 5/5/15 #42665 For AES Encryption
#include "base64.h" // WJF 5/8/15 #42665 For base64 encoding/decoding
// #include <math.h> // WJF 11/2/15 Win-6 Used for Pow // WJF 6/24/16 Win-21 No longer needed
#include <time.h> // WJF 12/17/15 Win-7
#include "Utilities.h" // WJF 6/24/16 Win-21
#include <direct.h> // WJF 6/24/16 Win-21
#include "logging.h" // WJF 7/11/16 Win-20

// MWD 10/21/05 #9246 Define Function for DLL entrypoint.
#ifdef _cplusplus
extern "C" __declspec(dllexport) {
#endif
	BOOL WINAPI DllMain(HINSTANCE hinstDLL, DWORD fdwReason, LPVOID lpvReserved);
#ifdef _cplusplus
}
#endif

// --- Win32API Commands
void gui_GetWindow(PA_PluginParameters params, HWND hWnd);
void gui_GetWndRect(PA_PluginParameters params, BOOL isEx);
void gui_SetWndRect(PA_PluginParameters params, BOOL isEx);
void gui_ShowWindow(PA_PluginParameters params, BOOL isEx);
void sys_GetUserName(PA_PluginParameters params);
void gui_SetWindowTitle(PA_PluginParameters params, BOOL isEx);
void sys_IsMultiByte(PA_PluginParameters params);
void gui_DisableCloseBox(PA_PluginParameters params, BOOL isEx);
void gui_SetWindowLong(PA_PluginParameters params, BOOL isEx);
void gui_WinHelp(PA_PluginParameters params);
void sys_GetDefPrinter(PA_PluginParameters params);
void sys_SetDefPrinter(PA_PluginParameters params);
void sys_EnumPrinters(PA_PluginParameters params);
void gui_DelMenuItem(PA_PluginParameters params, BOOL isEx);
void gui_GetOpenFileName(PA_PluginParameters params);
void gui_GetSaveFileName(PA_PluginParameters params);
void gui_LoadIcon(PA_PluginParameters params, BOOL isEx);
void gui_SetIcon(PA_PluginParameters params, BOOL isEx);
void gui_GetWindowFrom4DWin(PA_PluginParameters params);
void sys_GetRegionSettings(PA_PluginParameters params, BOOL arraySupplied);
void sys_GetTimeZone(PA_PluginParameters params);
void sys_GetUTCOffset(PA_PluginParameters params);
void gui_GetDisplayFontDPI(PA_PluginParameters params);
void sys_GetPrintJob(PA_PluginParameters params); // added 7/16/01 -- rewritten 10/23/01
void sys_GetGUID(PA_PluginParameters params); //added 7/30/01
void gui_FlashWindow(PA_PluginParameters params, BOOL isEx); //added 08/04/01 filled unused case (10)
void sys_GetRoutes(PA_PluginParameters params); //added 08/08/01
void sys_GetNetworkInfo(PA_PluginParameters params); //added 08/09/01
LONG_PTR sys_GetOSVersion(BOOL bInternalCall, PA_PluginParameters params); //added as plugin call 0828/01 was internal only
void sys_PlayWav(PA_PluginParameters params); //add 10/16/01
void sys_GetWindowMetrics(PA_PluginParameters params); // added 11/09/01
void gui_LoadBackground(PA_PluginParameters params, BOOL DeInit); // added 11/09/01
void sys_SetClientTime(PA_PluginParameters params); // added 11/30/01
void sys_SetClientDate(PA_PluginParameters params); //added 11/30/01
void gui_ToolTipCreate(PA_PluginParameters params, BOOL isEx); // added 12/06/01
void gui_ToolTipShowOnObject(PA_PluginParameters params, BOOL isEx); // added 12/17/01
void gui_ToolTipShowOnCoord(PA_PluginParameters params); // added 12/17/01
void gui_ToolTipHide(PA_PluginParameters params); // added 12/17/01
void gui_ToolTipDestroyControl(PA_PluginParameters params); // added 12/17/01
void gui_SetTrayIcon(PA_PluginParameters params, BOOL isEx); // added/revised 12/18/01  ITH 10/25/19 H-10802 Added BOOL isEx
void sys_FileCheck(PA_PluginParameters params); //added 01/08/02
void sys_GetCommandLine(PA_PluginParameters params); //added 04/02/02
void gui_GetWindowStyle(PA_PluginParameters params, BOOL isEx); //added 07/18/02
void gui_RestrictWindow(PA_PluginParameters params, BOOL isEx); //added 07/15/02
void gui_GetWindowState(PA_PluginParameters params, BOOL isEx); // added 07/22/02
void gui_SubClassInit(PA_PluginParameters params); // added 07/26/02
void sys_ShellExecute(PA_PluginParameters params); // added 08/21/02
void sys_IsAppLoaded(PA_PluginParameters params); // added 08/22/02
void gui_SelectColor(PA_PluginParameters params); //added 11/25/02 (3.5.3)
void gui_RespectToolBar(PA_PluginParameters params); // added 01/16/03 (3.5.4)
void sys_IsConnectedToInternet(PA_PluginParameters params);  // added 08/14/03 (3.5.5)
void gui_GetSysColor(PA_PluginParameters params); // added 12/02/03 (3.5.6)
void gui_SetSysColor(PA_PluginParameters params); // added 12/02/03 (3.5.6)
void sys_GetEnv(PA_PluginParameters params); // added 12/02/03 (3.5.6)
void sys_SetEnv(PA_PluginParameters params); // added 12/02/03 (3.5.6)
void sys_GetRegKey(PA_PluginParameters params); // added 12/04/03 (3.5.6)
void sys_GetRegType(PA_PluginParameters params); // added 12/14/03 (3.5.6)
void sys_GetRegEnum(PA_PluginParameters params); // added 12/14/03 (3.5.6)
void sys_GetDocumentList(PA_PluginParameters params); // added 6/4/04 (3.6)
void sys_SetPluginLanguage(PA_PluginParameters params); // MWD & Mark De Wever 10/2/06 #12225
void gui_SetWindowStyle(PA_PluginParameters params, BOOL isEx); // MWD & Mark De Wever 10/2/06 #12225 // WJF 6/24/16 Win-21
void sys_FileExists(PA_PluginParameters params); // MWD & Mark De Wever 10/2/06 #12225
void sys_DirectoryExists(PA_PluginParameters params); // MWD & Mark De Wever 10/2/06 #12225
void sys_PrintDirect2Driver(PA_PluginParameters params); // MWD 8/15/06 #10250
void sys_KillProcessByName(PA_PluginParameters params); // MWD 11/30/06 #12572
void sys_KillProcessByID(PA_PluginParameters params); // MWD 11/30/06 #12572
void sys_EnumProcesses(PA_PluginParameters params); // MWD 11/30/06 #12572
void sys_LogonUser(PA_PluginParameters params); // MWD 1/8/07 #6982
void sys_GetTimeZoneList(PA_PluginParameters params); // REB 4/6/09 #19472
void TWAIN_GetSources(PA_PluginParameters params); //REB 6/23/09 #14151
void TWAIN_SetSource(PA_PluginParameters params); // REB 6/23/09 #14151
void TWAIN_AcquireImage(PA_PluginParameters params); // REB 6/23/09 #14151
void sys_IsAppFrontmost(PA_PluginParameters params); // REB 8/21/09
void gui_MessageBox(PA_PluginParameters params, BOOL isEx); // DJD 2008-09-12 // WJF 6/24/16 Win-21 Added BOOL isEx
void gui_HideTaskBar(PA_PluginParameters params); // REB 1/8/10 #22389
void gui_ShowTaskBar(PA_PluginParameters params); // REB 1/8/10 #22389
void gui_HideTitleBar(PA_PluginParameters params); // REB 1/8/10 #22389
void gui_ShowTitleBar(PA_PluginParameters params); // REB 1/8/10 #22389
void gui_SetMDIOpaque(PA_PluginParameters params); // REB 1/8/10 #22389
void gui_SetMDITransparent(PA_PluginParameters params); // REB 1/8/10 #22389
void gui_MaximizeMDI(PA_PluginParameters params); // REB 1/8/10 #22389
void gui_MinimizeMDI(PA_PluginParameters params); // REB 1/8/10 #22389
void gui_RestoreMDI(PA_PluginParameters params); // REB 1/8/10 #22389
void sys_DisableTaskManager(PA_PluginParameters params); // REB 1/8/10 #22389
void sys_EnableTaskManager(PA_PluginParameters params); // REB 1/8/10 #22389
void sys_SetRegKey(PA_PluginParameters params, LONG_PTR selector); // REB 11/17/10 #25402
void sys_IsAppRunningAsService(PA_PluginParameters params); // REB 1/12/11 #25587
void sys_CompareBLOBs(PA_PluginParameters params); // REB 11/9/12 TESTING
void sys_GetFileVersionInfo(PA_PluginParameters params); // AMS 2/10/14 #36899
LONG_PTR sys_GetOSVersionEX(BOOL bInternalCall, PA_PluginParameters params);  // AMS2 12/10/14 #37816
void sys_SendRawPrinterData(PA_PluginParameters params); // AMS2 12/9/14 #40598
void sys_DeleteRegValue(PA_PluginParameters params); // WJF 4/14/15 #27474
void sys_DeleteRegKey(PA_PluginParameters params); // WJF 4/14/15 #27474
void gui_TakeScreenshot(PA_PluginParameters params, BOOL isEx); // WJF 7/7/15 #43138 // WJF 6/24/16 Win-21
void gui_GetWindowEx(PA_PluginParameters params, HWND hWnd); // WJF 9/15/15 #43731
void gui_GetWindowFrom4DWinEx(PA_PluginParameters params); // WJF 9/15/15 #43731
void gui_SetForegroundWindow(PA_PluginParameters params, BOOL isEx); // WJF 9/16/15 #43929 // WJF 6/24/16 Win-21
void gui_SetFocusEx(PA_PluginParameters params); // WJF 10/19/15 Win-3
void fileEncryption(PA_PluginParameters params, BOOL bDecrypt); // WJF 10/28/15 Win-4
void sys_HashText(PA_PluginParameters params); // WJF 10/28/15 Win-4
void textEncryption(PA_PluginParameters params, BOOL bDecrypt); // WJF 10/29/15 Win-4
void sys_GetDiskFreeSpace(PA_PluginParameters params); // WJF 11/2/15 Win-6
void sys_ProcessStart(PA_PluginParameters params); // WJF 4/20/16 Win-14
void sys_IsWow64Process(PA_PluginParameters params); // WJF 7/22/16 Win-26
void sys_CryptGenRandom(PA_PluginParameters params); // WJF 8/30/16 Win-30

// ----- Other modules -------
//window background-related
LRESULT APIENTRY BkgrndProc(HWND hwnd, UINT uMsg, WPARAM wParam, LPARAM lParam);

//print job-related
LRESULT APIENTRY newProc(HWND hwnd, UINT uMsg, WPARAM wParam, LPARAM lParam); // added 10/24/01
LRESULT APIENTRY newPrtSettingsDlgProc(HWND hwnd, UINT uMsg, WPARAM wParam, LPARAM lParam); // added 10/24/01
LRESULT CALLBACK printSettingsDlgHook(INT hCode, WPARAM wParam, LPARAM lParam); //added 10/24/01 // WJF 6/30/16 Win-21 INT_PTR_INT
BOOL CALLBACK EnumChildProc2(HWND hWnd, LPARAM lParam); //added 10/24/01
LRESULT APIENTRY newPrtDlgProc(HWND hwnd, UINT uMsg, WPARAM wParam, LPARAM lParam); // added 10/24/01
LRESULT CALLBACK printDlgHook(INT hCode, WPARAM wParam, LPARAM lParam); //added 10/24/01 // WJF 6/30/16 Win-21 INT_PTR_INT
LRESULT CALLBACK keyboardLLHook(INT code, WPARAM wParam, LPARAM lParam); // REB 1/8/10 #22389 // WJF 6/30/16 Win-21 INT_PTR_INT

//file open/save-related
UINT_PTR CALLBACK ComDlg32DlgProc(HWND hDlg, UINT uMsg, WPARAM wParam, LPARAM lParam); // added 7/27/01 // WJF 6/24/16 Win-21 BOOL -> UINT_PTR
LRESULT CALLBACK theHook(INT hCode, WPARAM wparam, LPARAM lParam); //added 07/27/01 // WJF 6/30/16 Win-21 INT_PTR -> INT
BOOL CALLBACK EnumChildProc(HWND hWnd, LPARAM lParam); //added 07/27/01
BOOL NEAR PASCAL TestNotify(HWND hDlg, LPOFNOTIFY pofn);
void ProcessCDError(DWORD dwErrorCode, HWND hWnd);
LRESULT CALLBACK postHook(INT hCode, WPARAM wParam, LPARAM lParam); //added 07/30/01 // WJF 6/30/16 Win-21 INT_PTR -> INT

void GetPlugInFullName(char *PlugInFullName); // added 07/27/01
void FormatIP(char *str, LPARAM dwIP); // added 08/09/01

HWND getWindowHandle(char* windowTitle, HWND wHnd);

DWORD GetDllVersion(LPCTSTR lpszDllName); //added 12/08/01

LRESULT CALLBACK GetMsgProc(INT nCode, WPARAM wParam, LPARAM lParam); //added 12/08/01 // WJF 6/30/16 Win-21 INT_PTR -> INT
LRESULT APIENTRY ProToolsProc(HWND hwnd, UINT uMsg, WPARAM wParam, LPARAM lParam); //added 07/15/02

VOID createNewProcess(VOID); // added 12/17/01

//tray icon related
LONG getTrayIconParams(PA_PluginParameters params, LONG *pAction, LONG *pFlags, UINT *pIconID, LONG *pProcessNbr, LONG_PTR *pIconHndl, char* szTipParam, char* szBalloonInfo, char* szBalloonTitle); // WJF 6/30/16 Win-21 MOST LONG_PTR -> LONG  // ZRW 2/13/17 WIN-39 pIconID LONG -> UINT
LONG findIconID(pTI *, LONG iconID, LONG *pProcNbr); // WJF 6/30/16 Win-21 LONG_PTR -> LONG
LONG deleteIcon(pTI *, LONG iconID);  // WJF 6/30/16 Win-21 LONG_PTR -> LONG
BOOL insertIcon(pTI *, LONG iconID, LONG procNbr); // WJF 6/30/16 Win-21 LONG_PTR -> LONG
BOOL readIconInfo(pTI *, LONG, LONG*, LONG*);
LONG updateIconIdProcNbr(pTI *pIcon, LONG iconID, LONG processNbr); // WJF 6/30/16 Win-21 LONG_PTR -> LONG
LONG_PTR sizeOfTI(pTI);
LONG_PTR isEmpty(pTI);
VOID Delay(DWORD delayTime);
void processWindowMessage(LONG_PTR source, LONG_PTR hwnd, WPARAM wParam, LPARAM lParam); // added 1st param 01/22/03, chgd 2nd to LONG_PTR from HWND

BOOL checkTimeProvider(void); // added 01/04/02

LONG enumPrintersUsingRegistry(PA_Variable *printerArray); // added 04/20/02 // WJF 6/29/16 Win-21 LONG_PTR -> LONG
//LONG_PTR enumPrintersUsingINI(PA_Variable *printerArray); // added 04/20/02

// linked list related (this is an unordered list)
// WJF 6/30/16 Win-21 Most LONG_PTR -> LONG
void  init_list(pLL* pStartOfList);
void  clear_list(pLL* pStartOfList);
BOOL  search_list(pLL* pSOL, pLL *thisLink, pLL *previousLink, LONG dataPosition, LONG matchType, LONG_PTR* pSearchKey);
void* insert_list(pLL* pSOL);
BOOL  delete_list(pLL* pSOL, LONG dataPosition, LONG matchType, LONG_PTR* pSearchKey);
LONG  length_list(pLL pStartOfList);

HINSTANCE getPSapiPointers(LPFNENUMPROC *ppEnumProc, LPFNENUMPROCMODS *ppEnumProcMods, LPFNGETMODFNAME *ppGetModFName);

BOOL reviewProcesses(HANDLE hPSapiDLL, LPFNENUMPROC lpfnEnumProc, LPFNENUMPROCMODS lpfnEnumProcMods,
	LPFNGETMODFNAME lpfnGetModFName, char *pAppName, BOOL bUseToolHelp);

BOOL restoreOrig4DWindowProcess(); //added 01/21/03
VOID subclass4DWindowProcess(); // MJG 3/26/04

// registry related
HKEY getRootKey(INT_PTR key);
LONG get4dRegType(INT_PTR key); // WJF 6/30/16 Win-21 INT_PTR -> LONG
LONG regGetNumElements(char *pValue); // WJF 6/30/16 Win-21 LONG_PTR -> LONG
void regExpandStr(char **pValue);

// Callback for Clean process termination
BOOL CALLBACK TerminateClean(HWND hWnd, LPARAM lparam); // MWD 1/8/07 #5421

// REB 2/26/13 #35165
unsigned __stdcall TWAIN_GetImage(void *);

// WJF 9/10/15 #43727
long __stdcall OrchTwain_Get(LPCSTR filePath, BOOL Get64, BOOL ShowUI, BOOL IsWIA, BOOL GetMultiple); // WJF 9/21/15 #43940 Added IsWIA and GetMultiple

char * twainSource; // WJF 9/11/15 #43727 Since the TWAIN functionality is separate from Win32API, let's just hold on to the source name instead of trying to keep the source open

// WJF 9/1/15 #43731 Handle Array Declarations
LONG_PTR handleArray[HANDLEARRAY_CAPACITY];

HANDLE hArrayMutex;

DWORD handleArray_init();
INT handleArray_add(LONG_PTR handle); // WJF 6/24/16 Win-21 DWORD to INT
DWORD handleArray_remove(PA_PluginParameters params);
DWORD handleArray_free(PA_PluginParameters params);
HWND  handleArray_retrieve(DWORD hWndIndex);

// WJF 9/21/15 #43601
void utilitiesLock(void);
DWORD utilitiesYield(const char * filePath, BOOL bTimer, BOOL bSleep); // WJF 12/17/15 Win-7 Added bTimer, bSleep, and removed utilitiesSleep();

LONG killProcessByName(const char * processName, LONG_PTR lMode, BOOL bOrigCleanFirst); // WJF 12/17/15 Win-7

HGDIOBJ scaleImage(HDC hdc, HDC hdcMem, HBITMAP hOrigBitmap, INT width, INT height); // WJF 6/30/16 Win-21 This wasn't declared
HGDIOBJ tileImage(HDC hdc, HDC hdcMem, HBITMAP hOrigBitmap, INT width, INT height); // WJF 6/30/16 Win-21 This wasn't declard

#endif // __4DPLUGING_H__
